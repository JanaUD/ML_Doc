Código para encontrar palabras con letras establecidas.

APLICACIÓN PARA ENCONTRAR PALABRAS DESEADAS BUSCANDOLAS DESDE UN ARCHIVO CARGADO EN GITHUB.
Es necesario instalar:

!pip install fitz
!pip install tools

# Inicio de código
import re
import requests # Permite hacer solicitudes HTTP
import fitz  # PyMuPDF (biblioteca en python para trabajar archivos en pdf)

# URL cruda del archivo PDF en GitHub
url = "https://raw.githubusercontent.com/JanaUD/ML_Doc/871ceb521a0bcb0929481df73e0a866f116da9de/redie%2C%2Bcontenido-varelaetal.pdf"

# Intentar descargar el archivo PDF desde la URL
try:
    response = requests.get(url)
    response.raise_for_status()  # Esto asegurará que la respuesta es exitosa

    # Se guarda el archivo descargado
    pdf_path = "contenido-varelaetal.pdf"
    with open(pdf_path, "wb") as f:
        f.write(response.content)
    print("Archivo PDF descargado correctamente.")
except requests.exceptions.RequestException as e:
    print(f"Error al descargar el archivo: {e}")
    raise

# Función para extraer el texto del archivo PDF
def extraer_texto_pdf(pdf_path):
    try:
        # Abrimos el archivo PDF
        doc = fitz.open(pdf_path)
        texto_completo = ""
        
        # Se verifica cuántas páginas tiene el PDF
        print(f"El PDF tiene {doc.page_count} páginas.")
        
        # Se realiza de manera repetitiva a través de todas las páginas y se extrae el texto
        for page_num in range(doc.page_count):
            page = doc.load_page(page_num)
            texto_completo += page.get_text("text")
        
        return texto_completo
    except Exception as e:
        print(f"Error al extraer texto del PDF: {e}")
        raise

# Se extrae el texto del archivo PDF descargado
texto = extraer_texto_pdf(pdf_path)

# Si el texto está vacío o no se ha extraído correctamente, mostrar un mensaje
if not texto:
    print("No se extrajo texto del PDF. Verifique si el archivo es legible.")
else:
    # Terminación que deseas buscar (se usa el símbolo "$" para indicar el final de la palabra)
    terminacion = "ca$"

    # Se filtran las palabras que terminan con la terminación especificada usando expresión regular
    palabras_filtradas = [palabra for palabra in texto.split() if re.search(terminacion, palabra)]

    # Mostrar las palabras encontradas
    if palabras_filtradas:
        print(f"Palabras que terminan con '{terminacion}':")
        print(palabras_filtradas)
    
#Print("")
print ("Jannet Ortiz Aguilar")

RESULTADOS

Archivo PDF descargado correctamente.
El PDF tiene 33 páginas.
Palabras que terminan con 'ca$':
['básica', 'Electrónica', 'Electrónica', 'básica', 'Electrónica', 'clásica', 'básica', 'básica', 'lingüística', 'Electrónica', 'electrónica', 'ortográfica', 'Electrónica', 'Electrónica', 'morfológica', 'Electrónica', 'teórica', 'antropológica', 'Electrónica', 'pedagógica', 'básica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica', 'Electrónica']
Jannet Ortiz Aguilar
